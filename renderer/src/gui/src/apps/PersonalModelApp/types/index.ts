export type ModelStatus = 'draft' | 'training' | 'ready' | 'failed';
export type BaseModel = 'llama3' | 'mistral' | 'phi3' | 'custom';
export type TrainingMethod = 'systemPrompt' | 'fineTuning';

export interface PersonalModelEntity {
  _id: string;
  entityType: 'PersonalModel';
  created_at: string;
  updated_at: string;
  skeleton: {
    name: string;
    description: string;
    baseModel: BaseModel;
    trainingMethod: TrainingMethod;
    status: ModelStatus;
    progress: number;
    trainingDataIds: string[];
    writingSample?: string;
    formattedSystemPrompt?: string;
    galBoxSerialNumber?: string;
    ollamaModelName?: string;
    phoneNumber?: string;
    notifyOnComplete?: boolean;
    tags: string[];
  }
}

export interface TrainingDataEntity {
  _id: string;
  entityType: 'TrainingData';
  created_at: string;
  updated_at: string;
  skeleton: {
    name: string;
    description: string;
    dataFormat: 'jsonl' | 'txt' | 'csv';
    source: 'generated' | 'imported' | 'manual';
    content: string; // JSONL content or raw text
    instructions?: string[];
    responses?: string[];
    parentModelId?: string; // If this training data was generated by a model
  }
}

export interface UIPersonalModel {
  id: string;
  name: string;
  description: string;
  baseModel: BaseModel;
  trainingMethod: TrainingMethod;
  status: ModelStatus;
  progress: number;
  trainingDataIds: string[];
  writingSample?: string;
  formattedSystemPrompt?: string;
  galBoxSerialNumber?: string;
  ollamaModelName?: string;
  phoneNumber?: string;
  notifyOnComplete?: boolean;
  tags: string[];
  created: Date;
  updated: Date;
}

export interface UITrainingData {
  id: string;
  name: string;
  description: string;
  dataFormat: 'jsonl' | 'txt' | 'csv';
  source: 'generated' | 'imported' | 'manual';
  content: string;
  instructions?: string[];
  responses?: string[];
  parentModelId?: string;
  created: Date;
  updated: Date;
}

export interface ModelCreationParams {
  name: string;
  description: string;
  baseModel: BaseModel;
  trainingMethod: TrainingMethod;
  writingSample?: string;
  formattedSystemPrompt?: string;
  trainingDataIds?: string[];
  galBoxSerialNumber?: string;
  phoneNumber?: string;
  notifyOnComplete?: boolean;
  tags?: string[];
}

export interface TrainingDataCreationParams {
  name: string;
  description: string;
  dataFormat: 'jsonl' | 'txt' | 'csv';
  source: 'generated' | 'imported' | 'manual';
  content: string;
  instructions?: string[];
  responses?: string[];
  parentModelId?: string;
}

export interface GenerateTrainingDataParams {
  baseModel: BaseModel;
  writingSample: string;
  numExamples: number;
  topics?: string[];
} 